// A.class
// ------------------------------------------
public abstract interface A : kotlin/Any {

  // module name: test-module
}
// B.class
// ------------------------------------------
public abstract interface B : kotlin/Any {

  // module name: test-module
}
// IntersectionTypeInLambdaLiteralAndDelegatedPropertyKt.class
// ------------------------------------------
package {

  // signature: intersection(LInv;LInv;)Ljava/lang/Object;
  public final fun <T#0 /* S */> intersection(x: Inv<in T#0>, y: Inv<in T#0>): T#0

  // signature: test(LInv;LInv;)V
  public final fun test(a: Inv<A>, b: Inv<B>): kotlin/Unit

  // signature: use(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V
  public final fun <T#0 /* K */> use(k: T#0, f: @kotlin/ExtensionFunctionType kotlin/Function2<T#0, T#0, T#0>): kotlin/Unit

  // signature: useNested(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V
  public final fun <T#0 /* K */> useNested(k: T#0, f: @kotlin/ExtensionFunctionType kotlin/Function2<Inv<T#0>, Inv<T#0>, Inv<T#0>>): kotlin/Unit
}
// IntersectionTypeInLambdaLiteralAndDelegatedPropertyKt$test$1.class
// ------------------------------------------
lambda {

  // signature: invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  local final fun kotlin/Nothing.<anonymous>(it: kotlin/Nothing): kotlin/Any
}
// IntersectionTypeInLambdaLiteralAndDelegatedPropertyKt$test$2.class
// ------------------------------------------
lambda {

  // signature: invoke(LInv;LInv;)LInv;
  local final fun kotlin/Nothing.<anonymous>(it: kotlin/Nothing): Inv<out kotlin/Any>
}
// IntersectionTypeInLambdaLiteralAndDelegatedPropertyKt$test$d$2.class
// ------------------------------------------
lambda {

  // signature: invoke()Ljava/lang/Object;
  local final fun <anonymous>(): kotlin/Any
}
// Inv.class
// ------------------------------------------
public final class Inv<T#0 /* T */> : kotlin/Any {

  // signature: <init>(Ljava/lang/Object;)V
  public /* primary */ constructor(e: T#0)

  // module name: test-module
}
// META-INF/test-module.kotlin_module
// ------------------------------------------
module {
  package <root> {
    IntersectionTypeInLambdaLiteralAndDelegatedPropertyKt
  }
}
